@page
@using FinanceApp
@model ShowAllDataModel
@{
    ViewData["Title"] = "All user data";
}

<h1>@ViewData["Title"]</h1>
@if(TempData["Success"] != null)
        { <div class="alert alert-success">@TempData["SuccessMessage"]</div> }
@if(TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}
<div class="container">
@if (Model.UserData != null){
    <div class="text-center">
    <h2 class="display-4">User data</h2>
        @foreach(var user in Model.UserData){ 
        <div>
            <p>Username: @user.UserName</p>
            <p>First Name: @user.FirstName</p>
            <p>Last Name: @user.LastName</p>
            <p>Email: @user.Email</p>
            <p>Accounts: @foreach (var accountNumber in user.AccountNumbers)
                {
                    @accountNumber<br>
                }
            </p>
        </div>
        }
    </div>
}
else{
    <div class="text-center">
        <h1 class="display-4">Welcome</h1>
        <div>
            <p>To create an account with username: 'admin' password: 'password' and populate the database with 1000 transactions, click the button</p>
            <form method="post" asp-page-handler="Populate">
            <button type="submit" id="populateButton">Populate</button>
            </form>
            <p>Otherwise you can <a href="/UserAccount/Login">login</a> or <a href="/UserAccount/Register">register</a> a user and manually add bankaccounts and transactions.</p>
        </div>
    </div>
}
</div>


@section Scripts { @{await Html.RenderPartialAsync("_ValidationScriptsPartial");} }